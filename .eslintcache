[{"E:\\prog\\projects\\gedit\\src\\App.js":"1","E:\\prog\\projects\\gedit\\src\\index.js":"2","E:\\prog\\projects\\gedit\\src\\reportWebVitals.js":"3"},{"size":2223,"mtime":1608767009415,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1607781061362,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607781061362,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"j9eji9",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\prog\\projects\\gedit\\src\\App.js",["15"],"import React, { useState } from \"react\";\nimport { ControlledEditor } from \"@monaco-editor/react\";\n\nimport \"./App.css\";\n\nconst LANGUAGE = [\n\t\"javascript\",\n\t\"html\",\n\t\"css\",\n\t\"typescript\",\n\t\"json\",\n\t\"less\",\n\t\"scss\",\n\t\"mysql\",\n\t\"sql\",\n\t\"pgsql\",\n\t\"c\",\n\t\"cpp\",\n\t\"java\",\n\t\"csharp\",\n\t\"dart\",\n\t\"dockerfile\",\n\t\"go\",\n\t\"graphql\",\n\t\"markdown\",\n\t\"php\",\n\t\"perl\",\n\t\"objective-c\",\n\t\"python\",\n\t\"rust\",\n\t\"ruby\",\n\t\"rust\",\n\t\"shell\",\n\t\"swift\",\n\t\"coffeescript\",\n\t\"kotlin\",\n\t\"plaintext\",\n\t\"vb\",\n];\n\nconst Selector = ({ selectLang, lang, theme }) => {\n\tconst [showList, setShowList] = useState(false);\n\n\tconst handleLangList = () => {\n\t\tsetShowList(!showList);\n\t};\n\n\tconst onSelectLang = (selectedLang) => {\n\t\tselectLang(selectedLang);\n\t\thandleLangList();\n\t};\n\n\treturn (\n\t\t<div className=\"SelectLangHolder\">\n\t\t\t{showList && (\n\t\t\t\t<div className=\"Langs\">\n\t\t\t\t\t{LANGUAGE.map((el, index) => (\n\t\t\t\t\t\t<p key={index} onClick={() => onSelectLang(el)}>\n\t\t\t\t\t\t\t{el}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"SelectLang\" onClick={handleLangList}>\n\t\t\t\t{lang}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst App = () => {\n\tconst [content, setContent] = useState(\"// Create something awesome\");\n\tconst [language, setLanguage] = useState(LANGUAGE[0]);\n\tconst [theme, setTheme] = useState(false);\n\n\tconst handleContent = (e, value) => {\n\t\tsetContent(value);\n\t};\n\n\tconst handleLang = (e) => {\n\t\tsetLanguage(e.target.value);\n\t};\n\n\tconst handleTheme = () => {\n\t\tsetTheme(!theme);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Main\"\n\t\t\tstyle={{ backgroundColor: theme ? \"#FFFFFE\" : \"#202124\" }}\n\t\t>\n\t\t\t<div className=\"EditorHolder\">\n\t\t\t\t<ControlledEditor\n\t\t\t\t\tvalue={content}\n\t\t\t\t\tclassName={\"Editor\"}\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\tonChange={handleContent}\n\t\t\t\t\ttheme={theme ? \"light\" : \"dark\"}\n\t\t\t\t\tloading={\n\t\t\t\t\t\t<h1 style={{ color: theme ? \"gray\" : \"white\" }}>Waiting...</h1>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"SettingHolder\"\n\t\t\t\tstyle={{ backgroundColor: theme ? \"#C9C9C8\" : \"#1E1E1E\" }}\n\t\t\t>\n\t\t\t\t<div className=\"Setting\">\n\t\t\t\t\t<Selector selectLang={(lang) => setLanguage(lang)} lang={language} />\n\t\t\t\t\t<button className=\"ThemeBTN\" onClick={handleTheme}>\n\t\t\t\t\t\t{theme ? \"dark\" : \"light\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","E:\\prog\\projects\\gedit\\src\\index.js",[],"E:\\prog\\projects\\gedit\\src\\reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":80,"column":8,"nodeType":"18","messageId":"19","endLine":80,"endColumn":18},"no-unused-vars","'handleLang' is assigned a value but never used.","Identifier","unusedVar"]